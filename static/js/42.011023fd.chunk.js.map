{"version":3,"sources":["views/Users/AddUser.js","views/Users/components/UserForm.js"],"names":["AddUser","props","_useState","useState","_useState2","Object","D_Projects_ieducate_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isLoading","setIsLoading","_useState3","_useState4","isSuccess","setIsSuccess","_useState5","_useState6","data","setData","_useState7","_useState8","error","setError","useEffect","history","push","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","_components__WEBPACK_IMPORTED_MODULE_4__","_components_UserForm__WEBPACK_IMPORTED_MODULE_2__","onSubmit","values","addUser","apiLoading","apiData","apiError","apiSuccess","isAdd","block","loading","color","__webpack_require__","d","__webpack_exports__","UserForm","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_final_form__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_2__","_ref","_ref$user","user","_ref$onSubmit","console","log","_ref$isAdd","children","validate","fields","errors","initialValues","render","_ref2","handleSubmit","name","label","component","RenderInput","placeholder","type"],"mappings":"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","file":"static/js/42.011023fd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { UserForm } from './components/UserForm';\r\nimport { addUser } from '../../handlers/Api/Calls';\r\nimport { ErrorToast, FloatToast, LoadingButton } from '../../components';\r\n\r\nconst AddUser = props => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleAdd = (values) => {\r\n        addUser(values, (apiLoading, apiData, apiError, apiSuccess) => {                        \r\n            setIsLoading(apiLoading);\r\n            setIsSuccess(apiSuccess);\r\n            setData(apiData);\r\n            setError(apiError);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSuccess && data) {            \r\n            props.history.push('/users');\r\n        }\r\n    }, [isSuccess, data]);\r\n\r\n    return (\r\n        <div className=\"add-user\">\r\n            {error && <ErrorToast error={error} />}\r\n            {isSuccess && <FloatToast />}\r\n            <UserForm\r\n                onSubmit={handleAdd}\r\n                isAdd={true}\r\n            >\r\n                <LoadingButton \r\n                    block \r\n                    loading={isLoading}\r\n                    color=\"primary\"\r\n                    className=\"mb-2\"\r\n                >Add User</LoadingButton>\r\n            </UserForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUser;","import React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { RenderInput } from '../../../components';\r\n\r\nexport const UserForm = ({\r\n    user = {},\r\n    onSubmit = values => console.log(values),\r\n    isAdd = false,\r\n    children\r\n}) => {\r\n\r\n    const validate = (fields) => {\r\n        const errors = {};\r\n        if(!fields[\"phone\"]) errors[\"phone\"] = 'required';\r\n        return errors;\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-form\">\r\n            <Form\r\n                onSubmit={onSubmit}\r\n                validate={validate}\r\n                initialValues={user}\r\n                render={({ handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Field \r\n                            name=\"firstName\" \r\n                            label=\"First Name\"\r\n                            component={RenderInput}\r\n                            placeholder=\"First Name\" \r\n                        />\r\n                        <Field \r\n                            name=\"lastName\" \r\n                            label=\"Last Name\"\r\n                            component={RenderInput}\r\n                            placeholder=\"Last Name\" \r\n                        />\r\n                        <Field \r\n                            name=\"phone\" \r\n                            label=\"Phone\"\r\n                            type=\"mobile\"\r\n                            component={RenderInput}\r\n                            placeholder=\"Phone\" \r\n                        />\r\n                        {isAdd && <Field \r\n                            name=\"password\" \r\n                            label=\"password\"\r\n                            type=\"password\"\r\n                            component={RenderInput}\r\n                            placeholder=\"password\" \r\n                        />}\r\n                        <Field \r\n                            name=\"email\" \r\n                            label=\"email\"\r\n                            type=\"email\"\r\n                            component={RenderInput}\r\n                            placeholder=\"email\" \r\n                        />\r\n                        <Field \r\n                            name=\"latitude\" \r\n                            label=\"latitude\"\r\n                            component={RenderInput}\r\n                            placeholder=\"latitude\" \r\n                        />\r\n                        <Field \r\n                            name=\"longitude\" \r\n                            label=\"longitude\"\r\n                            component={RenderInput}\r\n                            placeholder=\"longitude\" \r\n                        />\r\n                        <Field \r\n                            name=\"country\" \r\n                            label=\"country\"\r\n                            component={RenderInput}\r\n                            placeholder=\"country\" \r\n                        />\r\n                        <Field \r\n                            name=\"city\" \r\n                            label=\"city\"\r\n                            component={RenderInput}\r\n                            placeholder=\"city\" \r\n                        />\r\n                        {children}\r\n                    </form>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}